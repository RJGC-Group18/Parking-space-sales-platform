package com.group18.po;
// Generated 2021-11-27 1:43:04 by Hibernate Tools 3.5.0.Final

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Payment generated by hbm2java
 */
@Entity
@Table(name = "payment", catalog = "parkingsafesdb")
public class Payment implements java.io.Serializable {

	private PaymentId id;
	private Dealing dealing;
	private Parking parking;
	private Client client;
	private User user;
	private Date time;
	private Boolean pay;
	private BigDecimal paid;
	private BigDecimal unpaid;
	private Date deadline;

	public Payment() {
	}

	public Payment(PaymentId id, Dealing dealing, Parking parking, Client client, User user) {
		this.id = id;
		this.dealing = dealing;
		this.parking = parking;
		this.client = client;
		this.user = user;
	}

	public Payment(PaymentId id, Dealing dealing, Parking parking, Client client, User user, Date time, Boolean pay,
			BigDecimal paid, BigDecimal unpaid, Date deadline) {
		this.id = id;
		this.dealing = dealing;
		this.parking = parking;
		this.client = client;
		this.user = user;
		this.time = time;
		this.pay = pay;
		this.paid = paid;
		this.unpaid = unpaid;
		this.deadline = deadline;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "no", column = @Column(name = "no", nullable = false)),
			@AttributeOverride(name = "cid", column = @Column(name = "cid", nullable = false)),
			@AttributeOverride(name = "pid", column = @Column(name = "pid", nullable = false)) })
	public PaymentId getId() {
		return this.id;
	}

	public void setId(PaymentId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "no", nullable = false, insertable = false, updatable = false)
	public Dealing getDealing() {
		return this.dealing;
	}

	public void setDealing(Dealing dealing) {
		this.dealing = dealing;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pid", nullable = false, insertable = false, updatable = false)
	public Parking getParking() {
		return this.parking;
	}

	public void setParking(Parking parking) {
		this.parking = parking;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cid", nullable = false, insertable = false, updatable = false)
	public Client getClient() {
		return this.client;
	}

	public void setClient(Client client) {
		this.client = client;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "uid", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "time", length = 26)
	public Date getTime() {
		return this.time;
	}

	public void setTime(Date time) {
		this.time = time;
	}

	@Column(name = "pay")
	public Boolean getPay() {
		return this.pay;
	}

	public void setPay(Boolean pay) {
		this.pay = pay;
	}

	@Column(name = "paid", precision = 9)
	public BigDecimal getPaid() {
		return this.paid;
	}

	public void setPaid(BigDecimal paid) {
		this.paid = paid;
	}

	@Column(name = "unpaid", precision = 9)
	public BigDecimal getUnpaid() {
		return this.unpaid;
	}

	public void setUnpaid(BigDecimal unpaid) {
		this.unpaid = unpaid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deadline", length = 26)
	public Date getDeadline() {
		return this.deadline;
	}

	public void setDeadline(Date deadline) {
		this.deadline = deadline;
	}

}
